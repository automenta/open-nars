#summary New functions of Open-NARS version 1.6.x.

= Introduction =

Open-NARS 1.6.x is different from 1.5.x in the following major aspects:
  # In logic, it implements NAL-7, NAL-8, and NAL-9, and therefore completely implements NAL, as specified in [http://www.worldscientific.com/worldscibooks/10.1142/8665 Non-Axiomatic Logic: A Model of Intelligent Reasoning]. It is an attempt to re-do what [OpenNarsOneDotFour] planned to achieve.
  # In control, it refines the automatic resources allocation that has been there from the beginning, and combines it with the voluntary control introduced in NAL-9.
  # In software structure, it absorbs the ideas from previous discussions (such as in [AbstractDesignProposal], [Modules], [GUIRequest]) and implementations (the version built by Joe Geldart), as well as the recent discussions.

= Temporal inference (NAL-7) =

Beside [http://www.worldscientific.com/worldscibooks/10.1142/8665 Non-Axiomatic Logic: A Model of Intelligent Reasoning], temporal reasoning in NARS is also discussed in [http://www.cis.temple.edu/~pwang/Publication/temporal-causal.pdf Issues in Temporal and Causal Inference]. A previous implementation exists as version 1.3.3, with [https://code.google.com/p/open-nars/source/browse/trunk/nars-dist/Examples-1.3.3/Example-NAL7-abridged.txt working examples].

In package nars.language, the following three classes representing compound terms will be given an optional temporal order among its components: _Implication_, _Equivalence_, and _Conjunction_. This order can be represented either as subclasses, or as an attribute that takes three possible values: -1 for backward, +1 for forward, and 0 for concurrent. The plain text forms of the term connectors are listed in [InputOutputFormat].

In class nars.entity.Stamp, an occurrenceTime records the (observed, remembered or estimated) occurrence time of the event, together with its creation time. Different from the description in the book, the "tense" of a sentence is not stored with a sentence, but is only used at the interface. When a sentence is an input or output, the internal occurrenceTime will be translated to/from the external sense that is explicitly expressed in Narsese, as listed in [InputOutputFormat].

The class nars.io.StringParser will be modified to support this temporal version of Narsese, as specified in the Grammar Rules of NAL-7 (Table 11.1) in the book, as well as implemented as [InputOutputFormat].

As explained in the publications, temporal inference in NARS is designed by processing the logical and the temporal aspects separately. Therefore all the existing rules will be kept, except that the conclusion may contain a temporal term (with temporal order among components), a time interval(similar to the numbers in experience), and/or a temporal truth-value (with an occurrence time).

As specified in the book, the temporal rules are designed in the following way:
  # Each inference rule of IL-6 is extended by using the temporal copulas and connectors to replace the atemporal ones in the premises, then identifying the conclusions where both the logical and the temporal relations can be derived, so as to establish valid inference rules for IL-7.
  # Each inference rule of IL-7 is extended into a strong inference rule in NAL-7, using the same truth-value function as the corresponding rule in NAL-6.
  # Each strong inference rule of NAL-7 suggests one or more weak inference rules according to the reversibility relationship among the types of inference.

Therefore, the temporal term in the conclusion of a strong rule is produced in the following way:
  # The events in each premise are ordered temporally.
  # The two event sequences are merged, if possible.
  # The temporal order of events in the conclusion is marked accordingly.

For a weak rule, the temporal order is the one in the corresponding strong rule.  If the temporal orders among the premises are incompatible or insufficient to decide the order in the conclusion, no derivation will happen. 

Different from the experience, the time interval between terms are represented as a special type of term, named Interval. This term represents the system's "sense of time", which is approximate, as the rounded logarithm function of the number of clock cycles in the interval. That is, Math.round(Math.log(n)). This approximation is used, because otherwise similar intervals will be judged as different, so the corresponding evidence will not be accumulated by the revision rule. Whenever accurate time measurement is needed, the system should not depend on this approximate measurement, but uses an external reference (e.g., clock). [The logarithm function may be replaced by a power function, such as Math.sqrt(n). This can be decided later.]

Ideally, temporal inference is valid only when the premises are about the same moment, i.e., have the same occurrenceTime or no occurrenceTime (i.e., eternal). However, since occurrenceTime is approximate, a conclusion about one moment (that of the belief) can be projected to another (that of the task), at the cost of a confidence discount. Let _t0_ be the current time, and _t1_ and _t2_ are the occurrenceTime of the premises, then the discount factor is _d_ = 1 - |_t1-t2_| / (|_t0-t1_| + |_t0-t2_|), which is in [0,1]. This factor _d_ is multiplied to the confidence of a promise as a "temporal discount" to project it to the occurrence of the other promise, so as to derive a conclusion about that moment. In this way, if there are conflicting conclusions, the temporally closer one will be preferred by the choice rule.

The conclusion does not always has the same occurrenceTime as a premise. For instance, if _A_ and _A /=> B_ has occurrence time _t_, then the conclusion _B_ should have occurrence time _t+1_. If _A_ and _(&&,A,C) /=> B_ has occurrence time _t_ and _C_ is an Interval term with argument _n_, _B_ should have occurrence time _t_+1+Math.exp(_n_).

= Procedural inference (NAL-8) =

Beside [http://www.worldscientific.com/worldscibooks/10.1142/8665 Non-Axiomatic Logic: A Model of Intelligent Reasoning], procedural reasoning in NARS is also discussed in [http://www.degruyter.com/view/j/jagi.2012.3.issue-3/v10229-011-0021-5/v10229-011-0021-5.xml?format=INT Solving a Problem With or Without a Program]. A previous implementation exists as version 1.3.3, with [https://code.google.com/p/open-nars/source/browse/trunk/nars-dist/Examples-1.3.3/ working examples in several files], as well as descriptions in [ProceduralInference], [ProceduralExamples], and [ProceduralLearning].




= Introspective inference (NAL-9) =

A previous preliminary implementation exists as version 1.4.0, and explained briefly in [OpenNarsOneDotFour].

= Memory and control =



= Software structure =