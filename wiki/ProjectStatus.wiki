#summary The current status and the plan for the near future of the project.
#labels Phase-Requirements

= Current situation =

The main Open-NARS project (under http://code.google.com/p/open-nars/source/browse/#svn/trunk/nars_core_java and http://code.google.com/p/open-nars/source/browse/#svn/trunk/nars_gui) has been updated to version 1.5.5 in July 2013. This version implementes NAL-1 to NAL-6 as described in [http://www.worldscientific.com/worldscibooks/10.1142/8665 Non-Axiomatic Logic: A Model of Intelligent Reasoning]. This version is a major refactoring of the previous version, and it also realizes some ideas suggested by Joe Geldart and Jeff Thompson.

There are several going tasks within this project:
  *. *Testing of the current design.* Various domains have been chosen to test the expressive power of the grammar rules and the inferential powers of the inference rules. Some of the results summrized in the [http://www.cis.temple.edu/~pwang/demos.html reports] finished by the students involved in the testing. On-going tasks including forensic reasoning, improvisational decision-making, reasoning on semantic web, and natural language processing. These experiments may lead to future applications of the NARS techniques.
  *. *Top-layers implementation.* NAL-7, NAL-8, and NAL-9 will be re-implemented in version 1.5, probably in a form that is different from how they were implemented in versions 1.3 and 1.4. In particular, the implementation of NAL-9 may require further refactoring of the control mechanism. 
  *. *Control mechanism.* The resource allocation strategies of NARS need a more detailed conceptual design, then the related code will be modified. In particular, the automatic activities managed by the control mechanism will coordinate with the voluntary activities introduced ub NAL-9.

= Future tasks =

As far as the main project is concerned, there are several major tasks in the near future. 
  *. One possibility to be explored is the idea of implementing the inference rules in a declarative manner, similar to [http://www.cis.temple.edu/~pwang/Implementation/NAL/nal.pl the Prolog version of NAL]. The current approach in the Java version, mainly shown in nars.inference.RuleTables, lacks clarity and elegance, and is also hard to maintain. 
  *. Interface with other systems needs to support various types of  input/output channels. 
  *. System refactoring, as discussed in Modules.


